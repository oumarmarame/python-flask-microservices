#!/bin/bash
#
# Script de validation des am√©liorations bas√©es sur les cours MGL870
# Auteur: Oumar Marame
# Date: 27 octobre 2025
#

echo "=========================================="
echo "ÔøΩÔøΩÔøΩ TEST DES AM√âLIORATIONS COURS MGL870"
echo "=========================================="
echo ""

# Test 1: V√©rifier que le frontend fonctionne
echo "ÔøΩÔøΩÔøΩ Test 1: Frontend accessible..."
if curl -s -o /dev/null -w "%{http_code}" http://localhost:5000/ | grep -q "200"; then
    echo "‚úÖ Frontend: OK (http://localhost:5000)"
else
    echo "‚ùå Frontend: ERREUR"
    exit 1
fi
echo ""

# Test 2: V√©rifier les logs order-service pour m√©triques
echo "ÔøΩÔøΩÔøΩ Test 2: M√©triques initialis√©es dans order-service..."
if docker logs order-service 2>&1 | grep -q "Exportation Traces, M√©triques"; then
    echo "‚úÖ M√©triques: Configuration d√©tect√©e dans order-service"
else
    echo "‚ùå M√©triques: Non d√©tect√©es"
    exit 1
fi
echo ""

# Test 3: V√©rifier Jaeger accessible
echo "ÔøΩÔøΩÔøΩ Test 3: Jaeger accessible..."
if curl -s -o /dev/null -w "%{http_code}" http://localhost:16686/ | grep -q "200"; then
    echo "‚úÖ Jaeger: OK (http://localhost:16686)"
else
    echo "‚ùå Jaeger: ERREUR"
    exit 1
fi
echo ""

# Test 4: V√©rifier Prometheus accessible
echo "üìù Test 4: Prometheus accessible..."
if docker ps | grep -q prometheus; then
    echo "‚úÖ Prometheus: Conteneur actif (http://localhost:9090)"
else
    echo "‚ö†Ô∏è  Prometheus: Conteneur non d√©tect√© (non critique)"
fi
echo ""

# Test 5: V√©rifier que les fichiers modifi√©s existent
echo "ÔøΩÔøΩÔøΩ Test 5: Fichiers modifi√©s pr√©sents..."
FILES=(
    "frontend/application/frontend/views.py"
    "order-service/application/telemetry.py"
    "order-service/application/order_api/routes.py"
    "Rapport_TP_OpenTelemetry.md"
    "AMELIORATIONS_COURS.md"
)

ALL_EXIST=true
for file in "${FILES[@]}"; do
    if [ -f "$file" ]; then
        echo "  ‚úÖ $file"
    else
        echo "  ‚ùå $file (manquant)"
        ALL_EXIST=false
    fi
done

if [ "$ALL_EXIST" = true ]; then
    echo "‚úÖ Tous les fichiers modifi√©s sont pr√©sents"
else
    echo "‚ùå Certains fichiers sont manquants"
    exit 1
fi
echo ""

# Test 6: V√©rifier Section 8.7 dans le rapport
echo "ÔøΩÔøΩÔøΩ Test 6: Section maturit√© dans le rapport..."
if grep -q "8.7 Niveau de maturit√©" Rapport_TP_OpenTelemetry.md; then
    echo "‚úÖ Section 8.7: Trouv√©e dans le rapport"
else
    echo "‚ùå Section 8.7: Non trouv√©e"
    exit 1
fi
echo ""

# Test 7: V√©rifier import OpenTelemetry dans views.py
echo "ÔøΩÔøΩÔøΩ Test 7: Import OpenTelemetry trace dans frontend..."
if grep -q "from opentelemetry import trace" frontend/application/frontend/views.py; then
    echo "‚úÖ Import trace: D√©tect√© dans views.py"
else
    echo "‚ùå Import trace: Non d√©tect√©"
    exit 1
fi
echo ""

# Test 8: V√©rifier fonction get_order_metrics()
echo "ÔøΩÔøΩÔøΩ Test 8: Fonction get_order_metrics() dans telemetry.py..."
if grep -q "def get_order_metrics()" order-service/application/telemetry.py; then
    echo "‚úÖ get_order_metrics(): Trouv√©e"
else
    echo "‚ùå get_order_metrics(): Non trouv√©e"
    exit 1
fi
echo ""

echo "=========================================="
echo "‚úÖ TOUS LES TESTS PASS√âS AVEC SUCC√àS !"
echo "=========================================="
echo ""
echo "ÔøΩÔøΩÔøΩ R√©sum√© des am√©liorations valid√©es:"
echo "  ‚úÖ Spans personnalis√©s (frontend/views.py)"
echo "  ‚úÖ M√©triques m√©tier (order-service/telemetry.py)"
echo "  ‚úÖ Section maturit√© (Rapport section 8.7)"
echo "  ‚úÖ Tous les services op√©rationnels"
echo ""
echo "ÔøΩÔøΩÔøΩ Projet align√© avec les cours MGL870 !"
